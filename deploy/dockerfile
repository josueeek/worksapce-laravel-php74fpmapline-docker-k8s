FROM php:7.4-fpm-alpine

RUN docker-php-ext-install pdo_mysql

RUN apk update && apk add --no-cache \
    nginx \
    nano \
    supervisor \
    build-base \
    shadow \
    curl \
    zip \
    zlib-dev \
    libzip-dev \
    freetds-dev \
    unixodbc-dev \
    php7 \
    php7-fpm \
    php7-common \
    php7-mcrypt \
    php7-mbstring \
    php7-xml \
    php7-openssl \
    php7-json \
    php7-phar \
    php7-zip \
    php7-gd \
    php7-dom \
    php7-session \
    php7-zlib \
    sqlite 

RUN curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.5.2.2-1_amd64.apk
RUN curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/mssql-tools_17.5.2.1-1_amd64.apk

RUN apk add --allow-untrusted msodbcsql17_17.5.2.2-1_amd64.apk \
    && apk add --allow-untrusted mssql-tools_17.5.2.1-1_amd64.apk

RUN docker-php-ext-configure pdo \
    && pecl install pdo_sqlsrv redis sqlsrv \
    && docker-php-ext-install zip \
    && docker-php-ext-enable pdo_sqlsrv redis sqlsrv

COPY ./src/ /var/www/html
WORKDIR /var/www/html

RUN rm /etc/nginx/sites-enabled/default

COPY ./deploy/deploy.conf /etc/nginx/conf.d/default.conf

RUN mv /usr/local/etc/php-fpm.d/www.conf /usr/local/etc/php-fpm.d/www.conf.backup
COPY ./deploy/www.conf /usr/local/etc/php-fpm.d/www.conf

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN chmod +rx /usr/bin/composer

RUN composer install \
    --optimize-autoloader \
    --no-interaction \
    --no-plugins \
    --no-scripts \
    --prefer-dist \
    --ignore-platform-reqs

# RUN usermod -a -G www-data root
# RUN chgrp -R www-data storage

# RUN chown -R www-data:www-data ./storage
# RUN chmod -R 0777 ./storage

RUN chown -R www-data:www-data \
    /var/www/html/storage \
    /var/www/html/bootstrap/cache

RUN cp .env.example .env

RUN ln -s ./secret/.env .env

RUN chmod +x ./deploy/run

ENTRYPOINT ["./entrypoint"]

EXPOSE 80